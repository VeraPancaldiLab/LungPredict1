idx = which(names(groups[[i]])%in%ls)
idy = which(names(res[[i]])%in%ls)
if(length(idx)>0){
groups[[i]] = groups[[i]][-idx]
res[[i]] = res[[i]][-idy]
}
}
dt = c()
for (i in 1:length(res)) {
dt = c(dt, res[[i]])
}
dt = data.frame(dt)
rownames(dt) = rownames(deconv)
dataset = "LPVan_Early"
TFs <- read.csv(paste0(getwd(),"/Output/TFs/TFs_scores_all_", dataset, ".csv"), row.names = 1)
TFs <- read.csv("../Output/TFs/TFs_scores_all_", dataset, ".csv"), row.names = 1)
TFs <- read.csv(paste0("../Output/TFs/TFs_scores_all_", dataset, ".csv"), row.names = 1)
#Remove columns with low variance (no much change across samples)
TFs = data.frame(TFs[-which(rowVars(TFs)<=summary(rowVars(TFs))[2]),])
minAbsValue <- abs(min(TFs))
TFs = TFs + minAbsValue
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 20,horiz=F)
plot(hc)
rect.dendrogram(hc, h = 20,horiz=F)
clusters <- cutree(hc, h = 20)
TFs_modules = TFs %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs_modules)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 10,horiz=F)
clusters2 <- cutree(hc, h = 10)
TFs_modules_merge = TFs_modules %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters2)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
nSamples = ncol(TFs_modules_merge)
TFs_modules_merge = TFs_modules_merge[,colnames(TFs_modules_merge)%in%rownames(clinical.data)]
moduleTraitCor = cor(t(TFs_modules_merge), dt, use = "p")
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "")
dim(textMatrix) = dim(moduleTraitCor)
idx = which(moduleTraitPvalue>0.05)
for (i in idx) {
textMatrix[i] = NA
}
d <- dist(t(moduleTraitCor), method = "euclidean")
hc1 <- hclust(d, method = "ward.D2" )
vec = hc1[["order"]]
par(mar = c(20, 20, 4, 4)) #bottom, left, top, right
labeledHeatmap(Matrix = moduleTraitCor[,vec],
xLabels = names(dt[,vec]),
yLabels = rownames(TFs_modules_merge),
ySymbols = rownames(TFs_modules_merge),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix[,vec],
setStdMargins = FALSE,
cex.text = 0.6,
zlim = c(-1,1),
main = paste("Module-trait relationships"))
par(mar = c(20, 20, 4, 4)) #bottom, left, top, right
labeledHeatmap(Matrix = moduleTraitCor[,vec],
xLabels = names(dt[,vec]),
yLabels = rownames(TFs_modules_merge),
ySymbols = rownames(TFs_modules_merge),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix[,vec],
setStdMargins = FALSE,
cex.text = 0.6,
zlim = c(-1,1),
main = paste("Module-trait relationships"))
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 20,horiz=F)
clusters <- cutree(hc, k = 17)
TFs_modules = TFs %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs_modules)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 10,horiz=F)
clusters2 <- cutree(hc, h = 10)
TFs_modules_merge = TFs_modules %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters2)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
nSamples = ncol(TFs_modules_merge)
TFs_modules_merge = TFs_modules_merge[,colnames(TFs_modules_merge)%in%rownames(clinical.data)]
moduleTraitCor = cor(t(TFs_modules_merge), dt, use = "p")
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "")
dim(textMatrix) = dim(moduleTraitCor)
idx = which(moduleTraitPvalue>0.05)
for (i in idx) {
textMatrix[i] = NA
}
d <- dist(t(moduleTraitCor), method = "euclidean")
hc1 <- hclust(d, method = "ward.D2" )
vec = hc1[["order"]]
par(mar = c(20, 20, 4, 4)) #bottom, left, top, right
labeledHeatmap(Matrix = moduleTraitCor[,vec],
xLabels = names(dt[,vec]),
yLabels = rownames(TFs_modules_merge),
ySymbols = rownames(TFs_modules_merge),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix[,vec],
setStdMargins = FALSE,
cex.text = 0.6,
zlim = c(-1,1),
main = paste("Module-trait relationships"))
hc = as.dendrogram(hc1)
par(mar = c(5, 5, 4, 30)) #bottom, left, top, right
plot(hc, horiz= T)
rect.dendrogram(hc, h=0.6,horiz=TRUE)
clusters3 <- cutree(hc, k = 27)
Heatmap(t(scale(dt)), cluster_rows = hc, clustering_method_columns = "ward.D2",width = unit(30, "cm"), height = unit(35, "cm"), column_dend_height = unit(5, "cm"), show_heatmap_legend = F)
deconv_df = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster_", clusters3)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
Heatmap(t(scale(t(deconv_df))), clustering_method_columns = "ward.D2",width = unit(30, "cm"), height = unit(35, "cm"), column_dend_height = unit(5, "cm"), show_heatmap_legend = F)
data = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = clusters3) %>%
as.data.frame()
rownames(data) = colnames(dt)
niches = list()
for (i in 1:nrow(deconv_df)) {
niches[[i]] = rownames(data)[which(data$Cluster==i)]
}
Heatmap(t(scale(t(deconv_df))), clustering_method_columns = "ward.D2",width = unit(30, "cm"), height = unit(35, "cm"), column_dend_height = unit(5, "cm"), show_heatmap_legend = F)
dataset = "LungPredict"
colData_LP <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
colData_LP <- read.csv(paste0("../Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
data = t(deconv_df)
LP = data[rownames(data)%in%rownames(colData_LP),]
colData_LP = colData_LP[rownames(colData_LP)%in%rownames(LP),]
hc1 = as.dendrogram(hclust(dist(scale(LP)), method = "ward.D2"))
plot(hc1)
rect.dendrogram(hc1, k=2,horiz=F)
clusters <- cutree(hc1, k=2)
colData_LP$cluster = NULL
colData_LP$cluster = clusters
res = random_forest(data.frame(LP), colData_LP$cluster, 10)
ggplot(res[[2]], aes(x = reorder(rownames(res[[2]]), -Importance), y = Importance)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Features", y = "Importance") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(niches)
niches[[25]]
hclu = hclust(dist(t(scale(res[[1]]))), method = "ward.D2")
vec = hclu[["order"]]
ha <- HeatmapAnnotation(Cluster = colData_LP$cluster, col = list(Cluster = c("1" = "green", "2" = "purple")))
Heatmap(t(scale(res[[1]][,vec])), cluster_rows = F,  clustering_method_columns = "ward.D2", top_annotation = ha, width = unit(30, "cm"), height = unit(20, "cm"), column_dend_height = unit(10, "cm"), row_dend_width = unit(10, "cm"))
niches
View(clinical.data)
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalData_LPVan_Early.csv", row.names=1)
View(clinical.data)
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
remove.outliers = function(counts){
require("RColorBrewer")
require("pheatmap")
sampleDists <- dist(t(counts))
sampleDistMatrix <- as.matrix(sampleDists)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pdf("SampleDistanceMatrix.pdf", width = 16, height = 14)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
dev.off()
sampleTree = hclust(dist(t(counts)), method = "average");
pdf("SamplesClustering.pdf", width = 16)
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)
dev.off()
response = readline(prompt = "Do you have outliers? (Y|N): ")
if(response == 'Y'){
cutheight = as.numeric(readline(prompt = "Cut height parameter: "))
pdf("SamplesClusteringOutliers.pdf", width = 16)
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)
abline(h = cutheight, col = "red")
dev.off()
clust = cutreeStatic(sampleTree, cutHeight = cutheight, minSize = 10) # Determine cluster under the line
table(clust) # clust 1 contains the samples we want to keep.
keepSamples = (clust==1)
counts = counts[,keepSamples]
}
return(counts)
}
deconv = remove.outliers(t(deconv))
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalData_LPVan_Early.csv", row.names=1)
#Removing MCP
deconv <- deconv[,-grep("MCP", colnames(deconv))]
#Removing CD226
deconv <- deconv[,-grep("CD226", colnames(deconv))]
#Remove columns with low variance (no much change across samples)
deconv = data.frame(deconv[,-which(colVars(deconv)<=summary(colVars(deconv))[2])])
#Remove columns with more than 70% of zeros
i <- colSums(deconv == 0, na.rm=TRUE) < round(0.7*nrow(deconv))
deconv <- data.frame(deconv[, i, drop=FALSE])
cells = compute_cell.types(data.frame(deconv))
for (i in 1:length(cells)) {
data = cells[[i]]
if(ncol(data)>1){
data = removeCorrelatedFeatures(data)
cells[[i]] = data
}
}
res = list()
groups = list()
groups_similarity = list()
for (i in 1:length(cells)) {
x = compute_subgroups(cells[[i]], names(cells)[i])
res = c(res, x[1])
groups = c(groups, x[2])
groups_similarity = c(groups_similarity, x[4])
}
names_cells = c("B", "MACROPHAGES", "M0", "M1", "M2", "MONOCYTES", "NEUTROPHILS", "NK", "NK.ACTIVATED", "NK.RESTING", "NKT", "CD4", "CD4.ACTIVATED", "CD4.RESTING", "CD8", "TREGS", "DENDRITIC", "DENDRITIC.ACTIVATED", "DENDRITIC.RESTING", "CANCER", "ENDOTHELIAL", "CAF")
names(res) = names_cells
names(groups) = names_cells
names(groups_similarity) = names_cells
#Res and Groups
ls = remove_subgroups(groups)
for (i in 1:length(groups)) {
idx = which(names(groups[[i]])%in%ls)
idy = which(names(res[[i]])%in%ls)
if(length(idx)>0){
groups[[i]] = groups[[i]][-idx]
res[[i]] = res[[i]][-idy]
}
}
dt = c()
for (i in 1:length(res)) {
dt = c(dt, res[[i]])
}
dt = data.frame(dt)
rownames(dt) = rownames(deconv)
dataset = "LPVan_Early"
TFs <- read.csv(paste0("../Output/TFs/TFs_scores_all_", dataset, ".csv"), row.names = 1)
#Remove columns with low variance (no much change across samples)
TFs = data.frame(TFs[-which(rowVars(TFs)<=summary(rowVars(TFs))[2]),])
minAbsValue <- abs(min(TFs))
TFs = TFs + minAbsValue
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 20,horiz=F)
clusters <- cutree(hc, h = 20)
TFs_modules = TFs %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs_modules)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 10,horiz=F)
clusters2 <- cutree(hc, h = 10)
TFs_modules_merge = TFs_modules %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters2)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
nSamples = ncol(TFs_modules_merge)
TFs_modules_merge = TFs_modules_merge[,colnames(TFs_modules_merge)%in%rownames(clinical.data)]
moduleTraitCor = cor(t(TFs_modules_merge), dt, use = "p")
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "")
dim(textMatrix) = dim(moduleTraitCor)
idx = which(moduleTraitPvalue>0.05)
for (i in idx) {
textMatrix[i] = NA
}
d <- dist(t(moduleTraitCor), method = "euclidean")
hc1 <- hclust(d, method = "ward.D2" )
vec = hc1[["order"]]
par(mar = c(20, 20, 4, 4)) #bottom, left, top, right
labeledHeatmap(Matrix = moduleTraitCor[,vec],
xLabels = names(dt[,vec]),
yLabels = rownames(TFs_modules_merge),
ySymbols = rownames(TFs_modules_merge),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix[,vec],
setStdMargins = FALSE,
cex.text = 0.6,
zlim = c(-1,1),
main = paste("Module-trait relationships"))
par(mar = c(20, 20, 4, 4)) #bottom, left, top, right
labeledHeatmap(Matrix = moduleTraitCor[,vec],
xLabels = names(dt[,vec]),
yLabels = rownames(TFs_modules_merge),
ySymbols = rownames(TFs_modules_merge),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix[,vec],
setStdMargins = FALSE,
cex.text = 0.6,
zlim = c(-1,1),
main = paste("Module-trait relationships"))
hc = as.dendrogram(hc1)
par(mar = c(5, 5, 4, 30)) #bottom, left, top, right
plot(hc, horiz= T)
rect.dendrogram(hc, h=0.6,horiz=TRUE)
clusters3 <- cutree(hc, k = 27)
deconv_df = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster_", clusters3)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
#Save cell clusters
data = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = clusters3) %>%
as.data.frame()
rownames(data) = colnames(dt)
niches = list()
for (i in 1:nrow(deconv_df)) {
niches[[i]] = rownames(data)[which(data$Cluster==i)]
}
dataset = "LungPredict"
colData_LP <- read.csv(paste0("../Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
data = t(deconv_df)
LP = data[rownames(data)%in%rownames(colData_LP),]
colData_LP = colData_LP[rownames(colData_LP)%in%rownames(LP),]
hc1 = as.dendrogram(hclust(dist(scale(LP)), method = "ward.D2"))
plot(hc1)
rect.dendrogram(hc1, k=2,horiz=F)
clusters <- cutree(hc1, k=2)
colData_LP$cluster = NULL
colData_LP$cluster = clusters
res = random_forest(data.frame(LP), colData_LP$cluster, 10)
hclu = hclust(dist(t(scale(res[[1]]))), method = "ward.D2")
vec = hclu[["order"]]
dataset = "Vanderbilt"
data = t(deconv_df)
colData_Van <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
colData_Van <- read.csv(paste0("../Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
Van = data[rownames(data)%in%rownames(colData_Van),]
Van = Van[,colnames(Van)%in%colnames(res[[1]])]
colData_Van = colData_Van[rownames(colData_Van)%in%rownames(Van),]
names = colnames(res[[1]][,vec])
Heatmap(t(scale(Van[, names])), cluster_rows = F,  clustering_method_columns = "ward.D2", width = unit(30, "cm"), height = unit(20, "cm"), column_dend_height = unit(10, "cm"), row_dend_width = unit(10, "cm"))
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
source(paste0(getwd(),"/Algorithm_subgrouping.R"))
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalData_LPVan_Early.csv", row.names=1)
clinical.data = clinical.data[-which(clinical.data$Batch==6),]
deconv = deconv[rownames(deconv)%in%rownames(clinical.data),]
#Removing MCP
deconv <- deconv[,-grep("MCP", colnames(deconv))]
#Removing CD226
deconv <- deconv[,-grep("CD226", colnames(deconv))]
#Remove columns with low variance (no much change across samples)
deconv = data.frame(deconv[,-which(colVars(deconv)<=summary(colVars(deconv))[2])])
#Remove columns with more than 70% of zeros
i <- colSums(deconv == 0, na.rm=TRUE) < round(0.7*nrow(deconv))
deconv <- data.frame(deconv[, i, drop=FALSE])
cells = compute_cell.types(data.frame(deconv))
for (i in 1:length(cells)) {
data = cells[[i]]
if(ncol(data)>1){
data = removeCorrelatedFeatures(data)
cells[[i]] = data
}
}
res = list()
groups = list()
groups_similarity = list()
for (i in 1:length(cells)) {
x = compute_subgroups(cells[[i]], names(cells)[i])
res = c(res, x[1])
groups = c(groups, x[2])
groups_similarity = c(groups_similarity, x[4])
}
names_cells = c("B", "MACROPHAGES", "M0", "M1", "M2", "MONOCYTES", "NEUTROPHILS", "NK", "NK.ACTIVATED", "NK.RESTING", "NKT", "CD4", "CD4.ACTIVATED", "CD4.RESTING", "CD8", "TREGS", "DENDRITIC", "DENDRITIC.ACTIVATED", "DENDRITIC.RESTING", "CANCER", "ENDOTHELIAL", "CAF")
names(res) = names_cells
names(groups) = names_cells
names(groups_similarity) = names_cells
#Res and Groups
ls = remove_subgroups(groups)
for (i in 1:length(groups)) {
idx = which(names(groups[[i]])%in%ls)
idy = which(names(res[[i]])%in%ls)
if(length(idx)>0){
groups[[i]] = groups[[i]][-idx]
res[[i]] = res[[i]][-idy]
}
}
dt = c()
for (i in 1:length(res)) {
dt = c(dt, res[[i]])
}
dt = data.frame(dt)
rownames(dt) = rownames(deconv)
dataset = "LPVan_Early"
TFs <- read.csv(paste0("../Output/TFs/TFs_scores_all_", dataset, ".csv"), row.names = 1)
#Remove columns with low variance (no much change across samples)
TFs = data.frame(TFs[-which(rowVars(TFs)<=summary(rowVars(TFs))[2]),])
minAbsValue <- abs(min(TFs))
TFs = TFs + minAbsValue
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 20,horiz=F)
clusters <- cutree(hc, h = 20)
TFs_modules = TFs %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
hc <- as.dendrogram(hclust(dist(t(scale(t(TFs_modules)))), method = "ward.D2"))
plot(hc)
rect.dendrogram(hc, h = 10,horiz=F)
clusters2 <- cutree(hc, h = 10)
TFs_modules_merge = TFs_modules %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster ", clusters2)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
nSamples = ncol(TFs_modules_merge)
TFs_modules_merge = TFs_modules_merge[,colnames(TFs_modules_merge)%in%rownames(clinical.data)]
moduleTraitCor = cor(t(TFs_modules_merge), dt, use = "p")
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "")
dim(textMatrix) = dim(moduleTraitCor)
idx = which(moduleTraitPvalue>0.05)
for (i in idx) {
textMatrix[i] = NA
}
d <- dist(t(moduleTraitCor), method = "euclidean")
hc1 <- hclust(d, method = "ward.D2" )
vec = hc1[["order"]]
hc = as.dendrogram(hc1)
par(mar = c(5, 5, 4, 30)) #bottom, left, top, right
plot(hc, horiz= T)
rect.dendrogram(hc, h=0.6,horiz=TRUE)
dev.off()
clusters3 <- cutree(hc, k = 27)
deconv_df = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = paste0("Cluster_", clusters3)) %>%
group_by(Cluster) %>%
summarise(across(everything(), mean)) %>%
column_to_rownames("Cluster")
#Save cell clusters
data = dt %>%
t() %>%
as_tibble() %>%
mutate("Cluster" = clusters3) %>%
as.data.frame()
rownames(data) = colnames(dt)
niches = list()
for (i in 1:nrow(deconv_df)) {
niches[[i]] = rownames(data)[which(data$Cluster==i)]
}
dataset = "LungPredict"
colData_LP <- read.csv(paste0("../Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
data = t(deconv_df)
LP = data[rownames(data)%in%rownames(colData_LP),]
colData_LP = colData_LP[rownames(colData_LP)%in%rownames(LP),]
hc1 = as.dendrogram(hclust(dist(scale(LP)), method = "ward.D2"))
clusters <- cutree(hc1, k=2)
colData_LP$cluster = NULL
colData_LP$cluster = clusters
res = random_forest(data.frame(LP), colData_LP$cluster, 10)
ggplot(res[[2]], aes(x = reorder(rownames(res[[2]]), -Importance), y = Importance)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Features", y = "Importance") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
hclu = hclust(dist(t(scale(res[[1]]))), method = "ward.D2")
vec = hclu[["order"]]
dataset = "Vanderbilt"
data = t(deconv_df)
colData_Van <- read.csv(paste0("../Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
Van = data[rownames(data)%in%rownames(colData_Van),]
Van = Van[,colnames(Van)%in%colnames(res[[1]])]
colData_Van = colData_Van[rownames(colData_Van)%in%rownames(Van),]
names = colnames(res[[1]][,vec])
Heatmap(t(scale(Van[, names])), cluster_rows = F,  clustering_method_columns = "ward.D2", width = unit(30, "cm"), height = unit(20, "cm"), column_dend_height = unit(10, "cm"), row_dend_width = unit(10, "cm"))
niches
