Counts2$Genes = NULL
#Import clinical data
clinical.data1 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_LungPredict.csv"), row.names = 1)
clinical.data2 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_Vanderbilt.csv"), row.names = 1)
clinical.data1$EGFR_mut = NULL
clinical.data1$KRAS_mut = NULL
clinical.data1$STK11_mut = NULL
clinical.data1$Metastatic = NULL
clinical.data2$Batch[which(clinical.data2$Batch == '1')] <- '5'
clinical.data2$Batch[which(clinical.data2$Batch == '2')] <- '6'
clinical.data = rbind(clinical.data1, clinical.data2)
clinical.data = clinical.data[-which(clinical.data$Stages_simplified%in%c('III', 'IV')),]
#Save data files
write.csv(Counts, paste0(getwd(),"/Input/Counts/Counts_LPVan_Early.csv"), row.names = T)
write.csv(clinical.data, paste0(getwd(),"/Input/ClinicalData/ClinicalData_LPVan_Early.csv"), row.names = T)
#Import counts
Counts1 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_LungPredict.csv"), row.names = 1)
Counts2 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_ImmunoPredict.csv"), row.names = 1)
#Import clinical data
clinical.data1 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_LungPredict.csv"), row.names = 1)
clinical.data2 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_ImmunoPredict.csv"), row.names = 1)
#Join datasets
Counts = cbind(Counts1, Counts2)
clinical.data = rbind(clinical.data1[,intersect(colnames(clinical.data1), colnames(clinical.data2))], clinical.data2)
#Import response information
response <- read.csv(paste0(getwd(),"/RawFiles/ColumnData_Response.csv"), row.names=1)
#Match samples with response
Counts = Counts[,colnames(Counts) %in% rownames(response)]
clinical.data = clinical.data[rownames(clinical.data)%in%rownames(response),]
#Add information (order samples)
response = response[rownames(clinical.data),]
clinical.data$response = response$Response
#Save data files
write.csv(Counts, paste0(getwd(),"/Input/Counts/Counts_Response.csv"), row.names = T)
write.csv(clinical.data, paste0(getwd(),"/Input/ClinicalData/ClinicalData_Response.csv"), row.names = T)
#Import counts
Counts1 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_LungPredict.csv"), row.names = 1)
Counts2 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_ImmunoPredict.csv"), row.names = 1)
Counts3 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_Vanderbilt.csv"), row.names = 1)
#Import clinical data
clinical.data1 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_LungPredict.csv"), row.names = 1)
clinical.data2 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_ImmunoPredict.csv"), row.names = 1)
clinical.data3 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_Vanderbilt.csv"), row.names = 1)
#Join counts
Counts = cbind(Counts1, Counts2)
m2 <- do.call(rbind, strsplit(rownames(Counts), split="_", fixed = TRUE))
Counts <- as.matrix(Counts)
rownames(Counts) = m2[,2]
Counts = data.frame(Counts)
Counts3 = data.frame(Counts3)
Counts$Genes = rownames(Counts)
Counts3$Genes = rownames(Counts3)
Counts <- Counts %>%
inner_join(., Counts3, by= "Genes")
rownames(Counts) <- Counts$Genes
Counts$Genes = NULL
#Join clinical data
clinical.data = rbind(clinical.data1[,colnames(clinical.data1)%in%colnames(clinical.data3)], clinical.data2[,colnames(clinical.data2)%in%colnames(clinical.data3)], clinical.data3)
#Import KRAS information
KRAS <- read.csv(paste0(getwd(),"/RawFiles/ColumnData_KRAS.csv"), row.names=1)
#Match samples with response
Counts = Counts[,colnames(Counts) %in% rownames(KRAS)]
clinical.data = clinical.data[rownames(clinical.data)%in%rownames(KRAS),]
KRAS = KRAS[rownames(KRAS) %in% rownames(clinical.data),]
#Add information
clinical.data = cbind(clinical.data, KRAS[,-which(colnames(KRAS)%in%colnames(clinical.data))])
#Save data files
write.csv(Counts, paste0(getwd(),"/Input/Counts/Counts_KRAS.csv"), row.names = T)
write.csv(clinical.data, paste0(getwd(),"/Input/ClinicalData/ClinicalData_KRAS.csv"), row.names = T)
TPM_LUNGPREDICT <- read.csv("~/LungPredict1/Input/Counts/TPM_LUNGPREDICT.csv", row.names=1)
View(TPM_LUNGPREDICT)
#Import counts
Counts1 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_LungPredict.csv"), row.names = 1)
Counts2 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_Vanderbilt.csv"), row.names = 1)
m2 <- do.call(rbind, strsplit(rownames(Counts1), split="_", fixed = TRUE))
Counts1 <- as.matrix(Counts1)
rownames(Counts1) = m2[,2]
Counts1 = data.frame(Counts1)
Counts2 = data.frame(Counts2)
Counts1$Genes = rownames(Counts1)
Counts2$Genes = rownames(Counts2)
Counts1 <- Counts1 %>%
inner_join(., Counts2, by= "Genes")
rownames(Counts1) <- Counts1$Genes
Counts1$Genes = NULL
Counts2$Genes = NULL
#Import clinical data
clinical.data1 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_LungPredict.csv"), row.names = 1)
clinical.data2 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_Vanderbilt.csv"), row.names = 1)
clinical.data1$EGFR_mut = NULL
clinical.data1$KRAS_mut = NULL
clinical.data1$STK11_mut = NULL
clinical.data1$Metastatic = NULL
clinical.data2$Batch[which(clinical.data2$Batch == '1')] <- '5'
clinical.data2$Batch[which(clinical.data2$Batch == '2')] <- '6'
clinical.data = rbind(clinical.data1, clinical.data2)
clinical.data = clinical.data[-which(clinical.data$Stages_simplified%in%c('III', 'IV')),]
Counts = Counts[,colnames(Counts)%in%rownames(clinical.data)]
Counts1 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_LungPredict.csv"), row.names = 1)
Counts2 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_Vanderbilt.csv"), row.names = 1)
m2 <- do.call(rbind, strsplit(rownames(Counts1), split="_", fixed = TRUE))
Counts1 <- as.matrix(Counts1)
rownames(Counts1) = m2[,2]
Counts1 = data.frame(Counts1)
Counts2 = data.frame(Counts2)
Counts1$Genes = rownames(Counts1)
Counts2$Genes = rownames(Counts2)
Counts1 <- Counts1 %>%
inner_join(., Counts2, by= "Genes")
rownames(Counts1) <- Counts1$Genes
Counts1$Genes = NULL
Counts2$Genes = NULL
#Import clinical data
clinical.data1 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_LungPredict.csv"), row.names = 1)
clinical.data2 <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_Vanderbilt.csv"), row.names = 1)
clinical.data1$EGFR_mut = NULL
clinical.data1$KRAS_mut = NULL
clinical.data1$STK11_mut = NULL
clinical.data1$Metastatic = NULL
clinical.data2$Batch[which(clinical.data2$Batch == '1')] <- '5'
clinical.data2$Batch[which(clinical.data2$Batch == '2')] <- '6'
clinical.data = rbind(clinical.data1, clinical.data2)
clinical.data = clinical.data[-which(clinical.data$Stages_simplified%in%c('III', 'IV')),]
View(clinical.data)
Counts1 = Counts1[,colnames(Counts1)%in%rownames(clinical.data)]
#Save data files
write.csv(Counts1, paste0(getwd(),"/Input/Counts/Counts_LPVan_Early.csv"), row.names = T)
write.csv(clinical.data, paste0(getwd(),"/Input/ClinicalData/ClinicalData_LPVan_Early.csv"), row.names = T)
View(Counts1)
TPM_VANDERBILT <- read.csv("~/LungPredict1/Input/Counts/TPM_VANDERBILT.csv", row.names=1)
View(TPM_VANDERBILT)
Counts2 <- read.csv(paste0(getwd(),"/Input/Counts/Counts_Vanderbilt.csv"), row.names = 1)
#Import Counts
Counts <- as.matrix(read.table("/home/marcelo/LungPredict1/RawFiles/LP_STAR_RSEM_matrix_LEILA.txt", header=T, row.names = 1))
colnames(Counts) = gsub("X.home.leilak.......media.leilak.LaCie.LungPredict.Adenocarcinoma.RSEM.RNAseq_quals.", "", colnames(Counts))
colnames(Counts) = gsub(".genes.results", "", colnames(Counts))
Counts <- as.data.frame(Counts)
##Import Clinical data
clinical.data <- data.frame(read.csv("/home/marcelo/LungPredict1/RawFiles/ColumnData_LungPredict.csv", row.names = 1))
ggplot(clinical.data, aes(x = factor(Stages_simplified), fill=factor(..count..)), stat="count") +
geom_bar(stat = "count", width = 0.6, fill = c("#7E909A", "#1C4E80", "#A5D8DD", "#EA6A47"))+
geom_text(aes(label = ..count..),stat = "count", size = 4, vjust=2) +
labs(x = "Tumor Stages",
y = "Patients",
title = "Tumor stages across patients",
caption = "Data source: LungPredict",
fill = "Tumor Stages") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"))+
scale_fill_discrete(breaks=c('21','10','11', '20'), labels=c('Stage I', 'Stage II','Stage III', 'Stage IV'))
# create a dataset
stages <- c(rep("Stage I" , 2) , rep("Stage II" , 2) , rep("Stage III" , 2) , rep("Stage IV" , 2) )
condition <- rep(c("Male" , "Female") , 2)
value <- c(sum(clinical.data$Stages_simplified=="I"&clinical.data$Gender=="M"), sum(clinical.data$Stages_simplified=="I"&clinical.data$Gender=="F"),
sum(clinical.data$Stages_simplified=="II"&clinical.data$Gender=="M"), sum(clinical.data$Stages_simplified=="II"&clinical.data$Gender=="F"),
sum(clinical.data$Stages_simplified=="III"&clinical.data$Gender=="M"), sum(clinical.data$Stages_simplified=="III"&clinical.data$Gender=="F"),
sum(clinical.data$Stages_simplified=="IV"&clinical.data$Gender=="M"), sum(clinical.data$Stages_simplified=="IV"&clinical.data$Gender=="F"))
data <- data.frame(stages,condition,value)
# Dodge
ggplot(data, aes(fill=as.factor(condition), y=value, x=stages)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label = value), size = 6, vjust=2, position = position_dodge(width = .9)) +
labs(x = "Tumor Stages",
y = "Patients",
title = "Tumor stages across patients",
fill = "Gender") +
scale_fill_manual(values=c("#1C4E80", "#EA6A47"))
# Compute the position of labels
data <- count(clinical.data$Batch) %>%
mutate(prop = (freq/nrow(clinical.data))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data, aes(x = "", y = round(prop), fill = as.factor(x))) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos, label = paste0(round(prop), " %")), size=6, color = "black")+
theme_void() +
theme(legend.title = element_text(colour="black", size=10, face="bold"))+
labs(title = "Patients by batch",
fill = "Batch") +
scale_fill_manual(values = c("#7E909A", "#1C4E80", "#A5D8DD", "#EA6A47"), labels=c('Batch 1', 'Batch 2', 'Batch 3', 'Batch 4'))
# create a dataset
mutation <- c(rep("KRAS" , 2) , rep("EGFR" , 2) , rep("STK11" , 2))
condition <- rep(c("NA" , "Yes") , 3)
value <- c(count(clinical.data$KRAS_mut)$freq[1], count(clinical.data$KRAS_mut)$freq[2],
count(clinical.data$EGFR_mut)$freq[1], count(clinical.data$EGFR_mut)$freq[2],
count(clinical.data$STK11_mut)$freq[1], count(clinical.data$STK11_mut)$freq[2])
data <- data.frame(mutation,condition,value)
# Dodge
ggplot(data, aes(fill=factor(condition), y=value, x=mutation)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label = value), size = 6, hjust= 2, vjust=0.5, color = "black", position = position_dodge(width = .9)) +
labs(x = "Mutations",
y = "Patients",
title = "Mutations presence across patients",
fill = "Presence") +
scale_fill_manual(values=c("#0091D5", "#EA6A47"))+
coord_flip()
# Compute the position of labels
data <- count(clinical.data$Metastatic) %>%
mutate(prop = (freq/nrow(clinical.data))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data, aes(x = 2, y = round(prop), fill = as.factor(x))) +
geom_bar(stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void() +
theme(legend.title = element_text(colour="black", size=14, face="bold"))+
labs(title = "Tumor metastasis",
fill = "Metastasis") +
scale_fill_manual(values = c("#0091D5", "#F1F1F1")) +
xlim(0.5, 2.5)+
annotate("text",
label = paste0(round(data$prop[2]), "%"),
family = "Inter",
fontface = "bold",
color = "#0091D5",
size = 12,
x = 0.5,
y = 2.5)
# Compute the position of labels
data <- count(clinical.data$Smoking_Status) %>%
mutate(prop = (freq/nrow(clinical.data))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data, aes(x = "", y = round(prop), fill = as.factor(x))) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos, label = paste0(round(prop), " %")), size=6, color = "black")+
theme_void() +
theme(legend.title = element_text(colour="black", size=10, face="bold"))+
labs(title = "Patients by Smoking Status",
fill = "Smoking Status") +
scale_fill_manual(values = c("#EA6A47", "#1C4E80", "#A5D8DD"), breaks = c('Old', 'No', 'Yes'), labels=c('Old', 'Never', 'Current'))
# Compute the position of labels
data <- count(clinical.data$Age_Bracket) %>%
mutate(prop = (freq/nrow(clinical.data))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data, aes(x = 2, y = round(prop), fill = as.factor(x))) +
geom_bar(stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void() +
theme(legend.title = element_text(colour="black", size=10, face="bold"))+
labs(title = "Patients Age bracket",
fill = "Age bracket") +
scale_fill_manual(values = c("#F1F1F1","#0091D5"),breaks = c('70Plus', 'Less70'), labels=c('More than 70 years old', 'Less than 70 years old')) +
xlim(0.5, 2.5)+
annotate("text",
label = paste0(round(data$prop[1]), "%"),
family = "Inter",
fontface = "bold",
color = "#0091D5",
size = 12,
x = 0.5,
y = 2.5)
clinical.data2 <- read.csv("~/LungPredict1/RawFiles/clinic_data_v2_clean.csv", row.names=1)
clinical.data2$puncture_location[which(clinical.data2$puncture_location=="Extra-thoracique")] = "extra-thoracique"
clinical.data2$puncture_location[which(clinical.data2$puncture_location=="")] = "NA"
# Compute the position of labels
data <- count(clinical.data2$diagnostic) %>%
mutate(prop = (freq/nrow(clinical.data2))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data, aes(x = "", y = round(prop), fill = as.factor(x))) +
geom_col(width = 1, color = 1) +
coord_polar("y", start = 0)+
theme_void() +
theme(legend.title = element_text(colour="black", size=10, face="bold"))+
labs(title = "Patients diagnostic",
fill = "Diagnostic") +
scale_fill_manual(values = c("#EA6A47","#7E909A", '#A5D8DD', '#F1F1F1'),breaks = c('Adénocarcinome', 'Epidermoïde', 'Tumeur neuroendocrine', 'Autre'),
labels=c('Adenocarcinoma', 'Epidermoid', 'Neuroendocrine', 'Other')) +
geom_label_repel(data = data,
aes(y = lab.ypos, label = freq),
size = 4, nudge_x = 1, show.legend = F)
coldata = clinical.data2[rownames(clinical.data2)%in%rownames(clinical.data),]
coldata$puncture_location[which(coldata$puncture_location=="extra-thoracique")] = "Extra-thoracique"
coldata$puncture_location[which(coldata$puncture_location=="Poumon")] = "Lung"
coldata$type_of_puncture[which(coldata$type_of_puncture=="primaire")] = "Primary"
coldata$type_of_puncture[which(coldata$type_of_puncture=="métastase")] = "Metastasis"
# Compute the position of labels
data <- count(coldata$puncture_location) %>%
mutate(prop = (freq/nrow(coldata))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop) %>%
mutate(csum = rev(cumsum(rev(round(prop)))),
pos = round(prop)/2 + lead(csum, 1),
pos = if_else(is.na(pos), round(prop)/2, pos))
ggplot(data, aes(fill=factor(x), y=freq, x=x)) +
geom_bar(stat="identity", width = 0.65, position=position_dodge(.9)) +
geom_text(aes(label = freq), size = 6, hjust= 2, vjust=0.5, color = "black", position = position_dodge(width = .9)) +
labs(x = "Puncture",
y = "Patients",
fill = "Puncture location") +
scale_fill_manual(values=c("#0091D5", "#A5D8DD"),breaks = c('Lung','Extra-thoracique'))+
coord_flip()
# Compute the position of labels
data <- count(coldata$type_of_puncture) %>%
mutate(prop = (freq/nrow(coldata))*100) %>%
arrange(desc(x)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5*prop) %>%
mutate(csum = rev(cumsum(rev(round(prop)))),
pos = round(prop)/2 + lead(csum, 1),
pos = if_else(is.na(pos), round(prop)/2, pos))
ggplot(data, aes(fill=factor(x), y=freq, x=x)) +
geom_bar(stat="identity", width = 0.65, position=position_dodge(.9)) +
geom_text(aes(label = freq), size = 6, hjust= 2, vjust=0.5, color = "black", position = position_dodge(width = .9)) +
labs(x = "Puncture",
y = "Patients",
fill = "Type of puncture") +
scale_fill_manual(values=c("#1C4E80", "#EA6A47"),breaks = c('Primary', 'Metastasis'))+
coord_flip()
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
dataset = "LungPredict"
CountsLP <- read.csv(paste0(getwd(),"/Input/Counts/Counts_", dataset, ".csv"), row.names = 1)
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
clinical.data$Batch <- as.factor(clinical.data$Batch)
clinical.data$Smoking_Status <- as.factor(clinical.data$Smoking_Status)
clinical.data$Gender <- as.factor(clinical.data$Gender)
clinical.data$Age_Bracket <- as.factor(clinical.data$Age_Bracket)
clinical.data$Stages_simplified <- as.factor(clinical.data$Stages_simplified)
dds <- DESeqDataSetFromMatrix(
countData = round(Counts),
colData = clinical.data,
design = ~Batch + Stages_simplified + Gender + Smoking_Status + Age_Bracket)
Counts <- read.csv(paste0(getwd(),"/Input/Counts/Counts_", dataset, ".csv"), row.names = 1)
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
clinical.data$Batch <- as.factor(clinical.data$Batch)
clinical.data$Smoking_Status <- as.factor(clinical.data$Smoking_Status)
clinical.data$Gender <- as.factor(clinical.data$Gender)
clinical.data$Age_Bracket <- as.factor(clinical.data$Age_Bracket)
clinical.data$Stages_simplified <- as.factor(clinical.data$Stages_simplified)
dds <- DESeqDataSetFromMatrix(
countData = round(Counts),
colData = clinical.data,
design = ~Batch + Stages_simplified + Gender + Smoking_Status + Age_Bracket)
dds <- estimateSizeFactors(dds)
saveRDS(dds, paste0(getwd(),"/Output/DESeqObject_", dataset))
dds <- estimateSizeFactors(dds)
vsd <- vst(dds)
#Before batch effect removal
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("Batch effect - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
#After batch effect removal
assay(vsd) <- limma::removeBatchEffect(assay(vsd), batch=vsd$Batch)
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("After BE removal - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
write.csv(assay(vsd), paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"))
dataset = "Vanderbilt"
Counts <- read.csv(paste0(getwd(),"/Input/Counts/Counts_", dataset, ".csv"), row.names = 1)
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
clinical.data$Batch <- as.factor(clinical.data$Batch)
clinical.data$Smoking_Status <- as.factor(clinical.data$Smoking_Status)
clinical.data$Gender <- as.factor(clinical.data$Gender)
clinical.data$Age_Bracket <- as.factor(clinical.data$Age_Bracket)
clinical.data$Stages_simplified <- as.factor(clinical.data$Stages_simplified)
dds <- DESeqDataSetFromMatrix(
countData = round(Counts),
colData = clinical.data,
design = ~Batch + Stages_simplified + Gender + Smoking_Status + Age_Bracket)
dds <- estimateSizeFactors(dds)
saveRDS(dds, paste0(getwd(),"/Output/DESeqObject_", dataset))
dds <- estimateSizeFactors(dds)
vsd <- vst(dds)
#Before batch effect removal
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("Batch effect - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
#After batch effect removal
assay(vsd) <- limma::removeBatchEffect(assay(vsd), batch=vsd$Batch)
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("After BE removal - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
write.csv(assay(vsd), paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"))
dataset = "LPVan_Early"
Counts <- read.csv(paste0(getwd(),"/Input/Counts/Counts_", dataset, ".csv"), row.names = 1)
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
clinical.data$Batch <- as.factor(clinical.data$Batch)
clinical.data$Smoking_Status <- as.factor(clinical.data$Smoking_Status)
clinical.data$Gender <- as.factor(clinical.data$Gender)
clinical.data$Age_Bracket <- as.factor(clinical.data$Age_Bracket)
clinical.data$Stages_simplified <- as.factor(clinical.data$Stages_simplified)
dds <- DESeqDataSetFromMatrix(
countData = round(Counts),
colData = clinical.data,
design = ~Batch + Stages_simplified + Gender + Smoking_Status + Age_Bracket)
dds <- estimateSizeFactors(dds)
saveRDS(dds, paste0(getwd(),"/Output/DESeqObject_", dataset))
dds <- estimateSizeFactors(dds)
vsd <- vst(dds)
#Before batch effect removal
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("Batch effect - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
#After batch effect removal
assay(vsd) <- limma::removeBatchEffect(assay(vsd), batch=vsd$Batch)
PCAall = plotPCA(vsd, intgroup=c("Batch", "Gender","Stages_simplified", "Smoking_Status", "Age_Bracket"), returnData = TRUE)
pca.var = round(100*attr(PCAall, "percentVar"))
ggplot(data = PCAall, aes(x = PC1, y = PC2, color = Batch))+
geom_hline(yintercept = 0, lty = 2) +
geom_vline(xintercept = 0, lty = 2) +
geom_point(size=3)+
xlab(paste("PC1 - ", pca.var[1], "%", sep=""))+
ylab(paste("PC2 - ", pca.var[2], "%", sep=""))+
ggtitle(paste0("After BE removal - ",dataset), subtitle = paste(nrow(clinical.data)," Adenocarcinoma samples")) +
coord_fixed()
write.csv(assay(vsd), paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"))
dataset = "LungPredict"
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
dataset = "LungPredict"
#Input files
Counts_normalized <- read.csv(paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"), row.names = 1)
#Input files
Counts_normalized <- read.csv(paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"), row.names = 1)
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
compute_pca_analysis(Counts_normalized, clinical.data, 6, dataset)
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
compute_pca_analysis(Counts_normalized, clinical.data, 6, dataset)
View(Counts_normalized)
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
dataset = "LungPredict"
Counts_normalized <- as.matrix(read.csv(paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"), row.names = 1))
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
dds = readRDS(paste0(getwd(), "/Output/DESeqObject_", dataset))
m2 <- do.call(rbind, strsplit(rownames(Counts_normalized), split="_", fixed = TRUE))
Counts_normalized = as.matrix(Counts_normalized)
rownames(Counts_normalized) = m2[,2]
pathways = compute_pathways_scores(Counts_normalized, dataset)
TFs = compute_TFs_scores(Counts_normalized, dataset)
list_gold_standards=c("CYT","Roh_IS","Davoli_IS", "IFNy","Ayers_expIS","Tcell_inflamed")
gold.standards <- compute_gold_standards(RNA.tpm = data.frame(Counts_normalized), list_gold_standards, dataset)
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
dataset = "Vanderbilt"
Counts_normalized <- as.matrix(read.csv(paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"), row.names = 1))
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
dds = readRDS(paste0(getwd(), "/Output/DESeqObject_", dataset))
pathways = compute_pathways_scores(Counts_normalized, dataset)
View(Counts_normalized)
TFs = compute_TFs_scores(Counts_normalized, dataset)
list_gold_standards=c("CYT","Roh_IS","Davoli_IS", "IFNy","Ayers_expIS","Tcell_inflamed")
gold.standards <- compute_gold_standards(RNA.tpm = data.frame(Counts_normalized), list_gold_standards, dataset)
dataset = "LPVan_Early"
Counts_normalized <- as.matrix(read.csv(paste0(getwd(),"/Output/Counts_normalized_vsd_", dataset, ".csv"), row.names = 1))
clinical.data <- read.csv(paste0(getwd(),"/Input/ClinicalData/ClinicalData_", dataset, ".csv"), row.names = 1)
dds = readRDS(paste0(getwd(), "/Output/DESeqObject_", dataset))
View(Counts_normalized)
pathways = compute_pathways_scores(Counts_normalized, dataset)
TFs = compute_TFs_scores(Counts_normalized, dataset)
list_gold_standards=c("CYT","Roh_IS","Davoli_IS", "IFNy","Ayers_expIS","Tcell_inflamed")
gold.standards <- compute_gold_standards(RNA.tpm = data.frame(Counts_normalized), list_gold_standards, dataset)
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/all_deconvolutions_Counts_LPVan_Early_TPM.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalLPVan_Early.csv", row.names=1)
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalData_LPVan_Early.csv", row.names=1)
View(clinical.data)
rownames(deconv)
rownames(clinical.data)
clinical.data = clinical.data[-which(clinical.data$Batch==6),]
deconv = deconv[rownames(deconv)%in%rownames(clinical.data),]
source(paste0(getwd(),"/environment_set.R"))
libraries_set()
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalLPVan.csv", row.names=1)
deconv <- as.matrix(read.delim("~/LungPredict1/Input/Deconvolution/Deconvolution_LPVan_Early.txt", row.names=1))
clinical.data = read.csv("~/LungPredict1/Input/ClinicalData/ClinicalData_LPVan_Early.csv", row.names=1)
clinical.data = clinical.data[-which(clinical.data$Batch==6),]
deconv = deconv[rownames(deconv)%in%rownames(clinical.data),]
source(paste0(getwd(),"/Algorithm_subgrouping.R"))
